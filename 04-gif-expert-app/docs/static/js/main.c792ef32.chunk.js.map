{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","elems","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","answer","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","cat","del","delete","onClick","key","GifExpertApp","categories","deleteCategory","window","confirm","filter","cats","ReactDOM","render","document","getElementById"],"mappings":"sKA0CeA,EAvCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAfY,SAAAC,GAClBA,EAAIC,iBAEAJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,KAGdO,MAAM,oEAOV,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAvBc,SAAAR,GACtBF,EAAcE,EAAIS,OAAOF,a,8BCSlBG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAUH,GADrD,+DAESI,MAAMF,GAFf,cAENG,EAFM,gBAGWA,EAAOC,OAHlB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAaLM,GAbK,4CAAH,sDCyBEO,EAvBM,SAACf,GAElB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENpB,EAAQC,GACHoB,MAAK,SAAAP,GACFK,EAAS,CACLX,KAAMM,EACNG,SAAS,SAItB,CAAChB,IAEGiB,GCVII,EAVK,SAAC,GAAqB,EAApBV,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKoB,UAAU,yCAAf,UACI,qBAAKC,IAAKrB,EAAKsB,IAAKZ,IACpB,4BAAKA,QCuBFa,EA1BC,SAAC,GAAkC,IAAvBC,EAAsB,EAAhC1B,SAAuB2B,EAAS,EAAjBC,OAE/B,EAAkCb,EAAaW,GAAvCV,EAAR,EAAQA,QAAeH,EAAvB,EAAiBN,KAEjB,OAEE,gCAEI,sBAAKe,UAAU,MAAf,UACE,6BAAKI,IACP,sBAAMf,GAAG,QAAQkB,QAAW,kBAAMF,EAAID,IAAtC,qBAGDV,GAAW,yCAEZ,qBAAKM,UAAU,YAAf,SACGT,EAAOJ,KAAI,SAACC,GAAD,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBoB,IAAKpB,EAAIC,eCgB1BoB,EAhCM,WAEjB,MAAoC9C,mBAAS,IAA7C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAEMiD,EAAiB,SAACjC,GAChBkC,OAAOC,QAAP,8DAAgEnC,EAAhE,OACAhB,EAAcgD,EAAWI,QAAO,SAAAC,GAAI,OAAIA,IAASrC,OAIzD,OACE,qCACM,gDACA,cAAC,EAAD,CAAahB,cAAiBA,IAC9B,uBAEA,6BAEQgD,EAAWvB,KAAK,SAACT,GACb,OAAO,cAAC,EAAD,CACHA,SAAUA,EAEV4B,OAAQK,GADHjC,Y,MCrBjCsC,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.c792ef32.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const changeInputValue = (evt => {\r\n        setInputValue(evt.target.value);\r\n    })\r\n\r\n    const submitEvents = (evt => {\r\n        evt.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(elems => [inputValue, ...elems]);\r\n            setInputValue('');\r\n        }\r\n        else {\r\n            alert('Inserta al menos tres carácteres para realizar una busqueda.');\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitEvents}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={changeInputValue}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","\r\nconst getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=kxjhjPQCp5ByXjj8hIlj0P8YkqRKHxz4`;\r\n    const answer = await fetch(url);\r\n    const { data } = await answer.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useEffect, useState } from \"react\"\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(images => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // Retorna el objeto.\r\n\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({category: cat, delete: del}) => {\r\n\r\n  const { loading, data: images } = useFetchGifs(cat);\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n        <div className=\"bar\">\r\n          <h3>{cat}</h3>\r\n        <span id=\"close\" onClick = {() => del(cat)}>&times;</span>\r\n        </div>\r\n\r\n      {loading && <p>Cargando</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem {...img} key={img.id} />\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GifGrid;","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n// Componente Funcional.\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const deleteCategory = (category) => {\r\n        if (window.confirm(`¿Desea eliminar las imágenes relacionadas con ${category}?`)) {\r\n            setCategories(categories.filter(cats => cats !== category));\r\n        }\r\n    };\r\n\r\n    return (\r\n      <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => {\r\n                        return <GifGrid\r\n                            category={category}\r\n                            key={category}\r\n                            delete={deleteCategory}\r\n                        />;\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}