{"ast":null,"code":"import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from \"react-dom\";\nimport Swal from \"sweetalert2\";\nimport { convertEvents } from \"../helpers/convertEvents\";\nimport { fetchToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async (dispatch, getState) => {\n    const {\n      uid,\n      name\n    } = getState().auth;\n\n    try {\n      const dbEvent = { ...event,\n        start: event.startDate,\n        end: event.endDate\n      };\n      const response = await fetchToken('events', dbEvent, 'POST');\n      const body = await response.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name\n        };\n        console.log(event);\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const eventStartLoading = () => {\n  return async dispatch => {\n    try {\n      const response = await fetchToken('events');\n      const body = await response.json();\n      const events = convertEvents(body.events);\n      dispatch(eventsLoaded(events));\n    } catch (error) {}\n  };\n};\nexport const eventStartUpdate = event => {\n  return async dispatch => {\n    try {\n      const response = await fetchToken(`events/${event.id}`, event, 'DELETE');\n      const body = await response.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  };\n};\nexport const eventStartDelete = () => {\n  const {\n    id\n  } = getState().calendar.activeEvent;\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetchToken(`events/${id}`, {}, 'delete');\n      const body = await response.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActive = () => ({\n  type: types.eventClearActive\n});\n\nconst eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted\n});\n\nconst eventsLoaded = events => ({\n  type: types.eventsLoaded,\n  payload: events\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/actions/events.js"],"names":["__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Swal","convertEvents","fetchToken","types","eventStartAddNew","event","dispatch","getState","uid","name","auth","dbEvent","start","startDate","end","endDate","response","body","json","ok","id","user","_id","console","log","eventAddNew","error","eventStartLoading","events","eventsLoaded","eventStartUpdate","eventUpdated","fire","msg","eventStartDelete","calendar","activeEvent","eventDeleted","type","payload","eventSetActive","eventClearActive"],"mappings":"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","sourcesContent":["import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from \"react-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { convertEvents } from \"../helpers/convertEvents\";\r\nimport { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const dbEvent = {\r\n                ...event,\r\n                start: event.startDate,\r\n                end: event.endDate\r\n            }\r\n\r\n            const response = await fetchToken('events', dbEvent, 'POST');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await fetchToken('events');\r\n            const body = await response.json();\r\n\r\n            const events = convertEvents(body.events);\r\n           dispatch( eventsLoaded( events ) );\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const response = await fetchToken(`events/${event.id}`, event, 'DELETE');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    const { id } = getState().calendar.activeEvent;\r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n\r\n            const response = await fetchToken(`events/${id}`, {}, 'delete');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n\r\n    };\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nconst eventsLoaded = (events) => ({ type: types.eventsLoaded, payload: events });"]},"metadata":{},"sourceType":"module"}