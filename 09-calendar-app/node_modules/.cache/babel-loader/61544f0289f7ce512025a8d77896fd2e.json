{"ast":null,"code":"import { fetchToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async dispatch => {\n    try {\n      const dbEvent = { ...event,\n        start: event.startDate,\n        end: event.endDate\n      };\n      const response = await fetchToken('events', dbEvent, 'POST');\n      const body = await response.json();\n\n      if (body.ok) {\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActive = () => ({\n  type: types.eventClearActive\n});\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/actions/events.js"],"names":["fetchToken","types","eventStartAddNew","event","dispatch","dbEvent","start","startDate","end","endDate","response","body","json","ok","eventAddNew","error","console","log","type","payload","eventSetActive","eventClearActive","eventUpdated","eventDeleted"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAQC,QAAR,IAAsB;AAGzB,QAAI;AACA,YAAMC,OAAO,GAAG,EACZ,GAAGF,KADS;AAEZG,QAAAA,KAAK,EAAEH,KAAK,CAACI,SAFD;AAGZC,QAAAA,GAAG,EAAEL,KAAK,CAACM;AAHC,OAAhB;AAMA,YAAMC,QAAQ,GAAG,MAAMV,UAAU,CAAC,QAAD,EAAWK,OAAX,EAAoB,MAApB,CAAjC;AACA,YAAMM,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAID,IAAI,CAACE,EAAT,EAAa;AACTT,QAAAA,QAAQ,CAAEU,WAAW,CAACX,KAAD,CAAb,CAAR;AACH;AAEJ,KAdD,CAcE,OAAOY,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAMJ,GAzBD;AA0BH,CA3BM;;AA6BP,MAAMD,WAAW,GAAIX,KAAD,KAAY;AAC5Be,EAAAA,IAAI,EAAEjB,KAAK,CAACa,WADgB;AAE5BK,EAAAA,OAAO,EAAEhB;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMiB,cAAc,GAAIjB,KAAD,KAAY;AACtCe,EAAAA,IAAI,EAAEjB,KAAK,CAACmB,cAD0B;AAEtCD,EAAAA,OAAO,EAAEhB;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMkB,gBAAgB,GAAG,OAAO;AACnCH,EAAAA,IAAI,EAAEjB,KAAK,CAACoB;AADuB,CAAP,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAKnB,KAAF,KAAc;AACtCe,EAAAA,IAAI,EAAEjB,KAAK,CAACqB,YAD0B;AAEtCH,EAAAA,OAAO,EAAEhB;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMoB,YAAY,GAAG,OAAO;AAC/BL,EAAAA,IAAI,EAAEjB,KAAK,CAACsB;AADmB,CAAP,CAArB","sourcesContent":["import { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch ) => {\r\n\r\n\r\n        try {\r\n            const dbEvent = {\r\n                ...event,\r\n                start: event.startDate,\r\n                end: event.endDate\r\n            }\r\n\r\n            const response = await fetchToken('events', dbEvent, 'POST');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});"]},"metadata":{},"sourceType":"module"}