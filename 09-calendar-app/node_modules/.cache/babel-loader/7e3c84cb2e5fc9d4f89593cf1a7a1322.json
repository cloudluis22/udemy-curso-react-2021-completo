{"ast":null,"code":"import { fetchToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async dispatch => {\n    const response = await fetchToken('events', event, 'POST');\n    const body = await response.json();\n    console.log(body);\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActive = () => ({\n  type: types.eventClearActive\n});\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/actions/events.js"],"names":["fetchToken","types","eventStartAddNew","event","dispatch","response","body","json","console","log","eventAddNew","type","payload","eventSetActive","eventClearActive","eventUpdated","eventDeleted"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAQC,QAAR,IAAsB;AAEzB,UAAMC,QAAQ,GAAG,MAAML,UAAU,CAAC,QAAD,EAAWG,KAAX,EAAkB,MAAlB,CAAjC;AACA,UAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAND;AAOH,CARM;;AAUP,MAAMI,WAAW,GAAIP,KAAD,KAAY;AAC5BQ,EAAAA,IAAI,EAAEV,KAAK,CAACS,WADgB;AAE5BE,EAAAA,OAAO,EAAET;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMU,cAAc,GAAIV,KAAD,KAAY;AACtCQ,EAAAA,IAAI,EAAEV,KAAK,CAACY,cAD0B;AAEtCD,EAAAA,OAAO,EAAET;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMW,gBAAgB,GAAG,OAAO;AACnCH,EAAAA,IAAI,EAAEV,KAAK,CAACa;AADuB,CAAP,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAKZ,KAAF,KAAc;AACtCQ,EAAAA,IAAI,EAAEV,KAAK,CAACc,YAD0B;AAEtCH,EAAAA,OAAO,EAAET;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMa,YAAY,GAAG,OAAO;AAC/BL,EAAAA,IAAI,EAAEV,KAAK,CAACe;AADmB,CAAP,CAArB","sourcesContent":["import { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const response = await fetchToken('events', event, 'POST');\r\n        const body = await response.json();\r\n\r\n        console.log(body);\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});"]},"metadata":{},"sourceType":"module"}