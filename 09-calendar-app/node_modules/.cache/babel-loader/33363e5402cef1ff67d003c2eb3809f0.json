{"ast":null,"code":"import _slicedToArray from\"C:/Users/Jos\\xE9 Luis/Desktop/React/09-calendar-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Calendar,momentLocalizer}from'react-big-calendar';import moment from'moment';import'moment/locale/es';import{Navbar}from'../ui/Navbar';import{messages}from'../../helpers/calendar-es';import{CalendarEvent}from'./CalendarEvent';import{CalendarModal}from'./CalendarModal';import'react-big-calendar/lib/css/react-big-calendar.css';import{uiOpenModal}from'../../actions/ui';import{eventClearActive,eventSetActive,eventStartLoading}from'../../actions/events';import{AddNewFab}from'../ui/AddNewFab';import{DeleteEventFab}from'../ui/DeleteEventFab';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";moment.locale('es');var localizer=momentLocalizer(moment);export var CalendarScreen=function CalendarScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.calendar;}),events=_useSelector.events,activeEvent=_useSelector.activeEvent;var _useSelector2=useSelector(function(state){return state.auth;}),uid=_useSelector2.uid;var _useState=useState(localStorage.getItem('lastView')||'month'),_useState2=_slicedToArray(_useState,2),lastView=_useState2[0],setLastView=_useState2[1];useEffect(function(){dispatch(eventStartLoading());},[dispatch]);var onDoubleClick=function onDoubleClick(evt){dispatch(uiOpenModal());};var onSelectEvent=function onSelectEvent(evt){dispatch(eventSetActive(evt));};var onViewChange=function onViewChange(evt){setLastView(evt);localStorage.setItem('lastView',evt);};var onSelectSlot=function onSelectSlot(){dispatch(eventClearActive());};var eventStyleGetter=function eventStyleGetter(event,start,end,isSelected){var style={backgroundColor:uid===event.user._id?'#367CF7':'#465660',borderRadius:'0px',opacity:0.8,display:'block',color:'white'};return{style:style};};return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-screen\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"startDate\",endAccessor:\"endDate\",messages:messages,eventPropGetter:eventStyleGetter,onDoubleClickEvent:onDoubleClick,onSelectEvent:onSelectEvent,onView:onViewChange,view:lastView,onSelectSlot:onSelectSlot,selectable:true,components:{event:CalendarEvent}}),/*#__PURE__*/_jsx(AddNewFab,{}),activeEvent&&/*#__PURE__*/_jsx(DeleteEventFab,{}),/*#__PURE__*/_jsx(CalendarModal,{})]});};","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Calendar","momentLocalizer","moment","Navbar","messages","CalendarEvent","CalendarModal","uiOpenModal","eventClearActive","eventSetActive","eventStartLoading","AddNewFab","DeleteEventFab","locale","localizer","CalendarScreen","dispatch","state","calendar","events","activeEvent","auth","uid","localStorage","getItem","lastView","setLastView","onDoubleClick","evt","onSelectEvent","onViewChange","setItem","onSelectSlot","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","user","_id","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-es'\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\nimport { CalendarModal } from './CalendarModal';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (evt) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (evt) => {\r\n        dispatch( eventSetActive(evt) );\r\n    }\r\n\r\n    const onViewChange = (evt) => {\r\n        setLastView(evt);\r\n        localStorage.setItem('lastView', evt)\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch( eventClearActive() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"startDate\"\r\n                endAccessor=\"endDate\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                components={ { event: CalendarEvent } }\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) &&\r\n                <DeleteEventFab/>\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}