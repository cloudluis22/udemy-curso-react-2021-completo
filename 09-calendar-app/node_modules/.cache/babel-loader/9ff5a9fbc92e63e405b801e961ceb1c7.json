{"ast":null,"code":"import { types } from '../types/types';\n/* id: new Date().getTime(),\r\n        title: 'RTX 3060 Ti',\r\n        startDate: moment().toDate(),\r\n        endDate: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar una RTX 3060 Ti',\r\n        user: {\r\n            id: '12345',\r\n            name: 'Peter Parker'\r\n        }\r\n    }*/\n\nconst initialState = {\n  events: [],\n  activeEvent: null\n};\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvent: action.payload\n      };\n\n    case types.eventAddNew:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case types.eventClearActive:\n      return { ...state,\n        activeEvent: null\n      };\n\n    case types.eventUpdated:\n      return { ...state,\n        events: state.events.map(evt => evt.id === action.payload.id ? action.payload : evt)\n      };\n\n    case types.eventDeleted:\n      return { ...state,\n        events: state.events.filter(evt => evt.id !== state.activeEvent.id),\n        activeEvent: null\n      };\n\n    case types.eventsLoaded:\n      return { ...state,\n        events: [...action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/reducers/calendarReducer.js"],"names":["types","initialState","events","activeEvent","calendarReducer","state","action","type","eventSetActive","payload","eventAddNew","eventClearActive","eventUpdated","map","evt","id","eventDeleted","filter","eventsLoaded"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE7D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,KAAK,CAACQ,cAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFjB,OAAP;;AAKJ,SAAKT,KAAK,CAACU,WAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,MAAM,EAAE,CACJ,GAAGG,KAAK,CAACH,MADL,EAEJI,MAAM,CAACG,OAFH;AAFL,OAAP;;AAQJ,SAAKT,KAAK,CAACW,gBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ,SAAKH,KAAK,CAACY,YAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaW,GAAb,CACJC,GAAG,IAAKA,GAAG,CAACC,EAAJ,KAAWT,MAAM,CAACG,OAAP,CAAeM,EAA3B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,GADtD;AAFL,OAAP;;AAOA,SAAKd,KAAK,CAACgB,YAAX;AACI,aAAO,EACH,GAAGX,KADA;AAEHH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAae,MAAb,CACJH,GAAG,IAAKA,GAAG,CAACC,EAAJ,KAAWV,KAAK,CAACF,WAAN,CAAkBY,EADjC,CAFL;AAKHZ,QAAAA,WAAW,EAAE;AALV,OAAP;;AAQR,SAAKH,KAAK,CAACkB,YAAX;AACI,aAAO,EACH,GAAGb,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGI,MAAM,CAACG,OAAX;AAFL,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA/CR;AAkDH,CApDM","sourcesContent":["import { types } from '../types/types';\r\n\r\n/* id: new Date().getTime(),\r\n        title: 'RTX 3060 Ti',\r\n        startDate: moment().toDate(),\r\n        endDate: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar una RTX 3060 Ti',\r\n        user: {\r\n            id: '12345',\r\n            name: 'Peter Parker'\r\n        }\r\n    }*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    evt => (evt.id === action.payload.id ) ? action.payload : evt\r\n                )\r\n            }\r\n\r\n            case types.eventDeleted:\r\n                return {\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        evt => (evt.id !== state.activeEvent.id)\r\n                    ),\r\n                    activeEvent: null\r\n                }\r\n\r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}