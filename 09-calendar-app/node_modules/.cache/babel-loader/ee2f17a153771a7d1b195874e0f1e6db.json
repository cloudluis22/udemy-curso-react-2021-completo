{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { fetchNoToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const response = await fetchNoToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await response.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal;\n    }\n  };\n};\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/actions/auth.js"],"names":["Swal","fetchNoToken","types","startLogin","email","password","dispatch","response","body","json","ok","localStorage","setItem","token","Date","getTime","login","uid","name","user","type","authLogin","payload"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAE3C,SAAO,MAAOC,QAAP,IAAoB;AAEvB,UAAMC,QAAQ,GAAG,MAAMN,YAAY,CAAC,MAAD,EAAS;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAT,EAA8B,MAA9B,CAAnC;AACA,UAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;AAEA,QAAID,IAAI,CAACE,EAAT,EAAa;AAETC,MAAAA,YAAY,CAACC,OAAb,CAAsB,OAAtB,EAA+BJ,IAAI,CAACK,KAApC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAsB,iBAAtB,EAAyC,IAAIE,IAAJ,GAAWC,OAAX,EAAzC;AAEAT,MAAAA,QAAQ,CAACU,KAAK,CAAC;AACXC,QAAAA,GAAG,EAAET,IAAI,CAACS,GADC;AAEXC,QAAAA,IAAI,EAAEV,IAAI,CAACU;AAFA,OAAD,CAAN,CAAR;AAKH,KAVD,MAUO;AACHlB,MAAAA,IAAI;AACP;AACJ,GAlBD;AAmBH,CArBM;;AAuBP,MAAMgB,KAAK,GAAIG,IAAD,KAAW;AACrBC,EAAAA,IAAI,EAAElB,KAAK,CAACmB,SADS;AAErBC,EAAAA,OAAO,EAAEH;AAFY,CAAX,CAAd","sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\nimport { fetchNoToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchNoToken('auth', { email, password }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal\r\n        }\r\n    };\r\n};\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});"]},"metadata":{},"sourceType":"module"}