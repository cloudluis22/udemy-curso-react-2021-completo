{"ast":null,"code":"import { fetchToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async dispatch => {\n    const response = await fetchToken('events', event, 'POST');\n    const body = await response.json();\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActive = () => ({\n  type: types.eventClearActive\n});\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/09-calendar-app/src/actions/events.js"],"names":["fetchToken","types","eventStartAddNew","event","dispatch","response","body","json","eventAddNew","type","payload","eventSetActive","eventClearActive","eventUpdated","eventDeleted"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAQC,QAAR,IAAsB;AAEzB,UAAMC,QAAQ,GAAG,MAAML,UAAU,CAAC,QAAD,EAAWG,KAAX,EAAkB,MAAlB,CAAjC;AACA,UAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEH,GALD;AAMH,CAPM;;AASP,MAAMC,WAAW,GAAIL,KAAD,KAAY;AAC5BM,EAAAA,IAAI,EAAER,KAAK,CAACO,WADgB;AAE5BE,EAAAA,OAAO,EAAEP;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMQ,cAAc,GAAIR,KAAD,KAAY;AACtCM,EAAAA,IAAI,EAAER,KAAK,CAACU,cAD0B;AAEtCD,EAAAA,OAAO,EAAEP;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMS,gBAAgB,GAAG,OAAO;AACnCH,EAAAA,IAAI,EAAER,KAAK,CAACW;AADuB,CAAP,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAKV,KAAF,KAAc;AACtCM,EAAAA,IAAI,EAAER,KAAK,CAACY,YAD0B;AAEtCH,EAAAA,OAAO,EAAEP;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMW,YAAY,GAAG,OAAO;AAC/BL,EAAAA,IAAI,EAAER,KAAK,CAACa;AADmB,CAAP,CAArB","sourcesContent":["import { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const response = await fetchToken('events', event, 'POST');\r\n        const body = await response.json();\r\n\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});"]},"metadata":{},"sourceType":"module"}