{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebaseConfig';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport types from '../types/types';\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore).catch(() => Swal.fire('Oops!', 'Something went wrong, try saving your note again!', 'error'));\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved', `Note with title \"${note.title}\" saved successfully!`, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      willOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n});","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/08-journal-app/src/actions/notes.js"],"names":["Swal","db","fileUpload","loadNotes","types","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","note","type","notesActive","payload","addNewNote","notesAddNew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","catch","fire","refreshNote","notesUpdated","startUploading","file","active","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete","noteLogout","notesLogoutCleaning"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,SAASC,EAAT,QAAmB,4BAAnB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAMC,GAAG,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,GAA5B;AAEA,UAAME,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAGZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHM,KAAhB;AAMA,UAAMC,GAAG,GAAG,MAAMf,EAAE,CAACgB,UAAH,CAAe,GAAET,GAAI,gBAArB,EAAsCU,GAAtC,CAA0CR,OAA1C,CAAlB;AAEAJ,IAAAA,QAAQ,CAAEa,UAAU,CAACH,GAAG,CAACI,EAAL,EAASV,OAAT,CAAZ,CAAR;AAEH,GAdD;AAgBH,CAjBM;AAmBP,OAAO,MAAMS,UAAU,GAAG,CAACC,EAAD,EAAKC,IAAL,MAAe;AAErCC,EAAAA,IAAI,EAAElB,KAAK,CAACmB,WAFyB;AAGrCC,EAAAA,OAAO,EAAE;AACLJ,IAAAA,EADK;AAEL,OAAGC;AAFE;AAH4B,CAAf,CAAnB;AAUP,OAAO,MAAMI,UAAU,GAAG,CAACL,EAAD,EAAKC,IAAL,MAAe;AACrCC,EAAAA,IAAI,EAAElB,KAAK,CAACsB,WADyB;AAErCF,EAAAA,OAAO,EAAE;AACLJ,IAAAA,EADK;AAEL,OAAGC;AAFE;AAF4B,CAAf,CAAnB;AAQP,OAAO,MAAMM,iBAAiB,GAAInB,GAAD,IAAS;AAEtC,SAAO,MAAOF,QAAP,IAAoB;AACvB,UAAMsB,KAAK,GAAG,MAAMzB,SAAS,CAACK,GAAD,CAA7B;AACAF,IAAAA,QAAQ,CAAEuB,QAAQ,CAACD,KAAD,CAAV,CAAR;AACH,GAHD;AAIH,CANM;AAQP,OAAO,MAAMC,QAAQ,GAAID,KAAD,KAAY;AAEhCN,EAAAA,IAAI,EAAElB,KAAK,CAAC0B,SAFoB;AAGhCN,EAAAA,OAAO,EAAEI;AAHuB,CAAZ,CAAjB;AAOP,OAAO,MAAMG,aAAa,GAAKV,IAAF,IAAY;AAErC,SAAO,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAMC,GAAG,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,GAA5B;;AAEA,QAAK,CAACa,IAAI,CAACW,GAAX,EAAiB;AACb,aAAOX,IAAI,CAACW,GAAZ;AACH;;AAED,UAAMC,eAAe,GAAG,EAAE,GAAGZ;AAAL,KAAxB;AACA,WAAOY,eAAe,CAACb,EAAvB;AAEA,UAAMnB,EAAE,CAACe,GAAH,CAAQ,GAAER,GAAI,kBAAiBa,IAAI,CAACD,EAAG,EAAvC,EAA0Cc,MAA1C,CAAiDD,eAAjD,EACDE,KADC,CACK,MAAMnC,IAAI,CAACoC,IAAL,CAAU,OAAV,EAAmB,mDAAnB,EAAwE,OAAxE,CADX,CAAN;AAGA9B,IAAAA,QAAQ,CAAE+B,WAAW,CAAChB,IAAI,CAACD,EAAN,EAAUa,eAAV,CAAb,CAAR;AACAjC,IAAAA,IAAI,CAACoC,IAAL,CAAU,OAAV,EAAoB,oBAAmBf,IAAI,CAACV,KAAM,uBAAlD,EAA0E,SAA1E;AAEH,GAjBD;AAmBH,CArBM;AAuBP,OAAO,MAAM0B,WAAW,GAAG,CAACjB,EAAD,EAAKC,IAAL,MAAe;AACtCC,EAAAA,IAAI,EAAElB,KAAK,CAACkC,YAD0B;AAEtCd,EAAAA,OAAO,EAAE;AACLJ,IAAAA,EADK;AAELC,IAAAA,IAAI,EAAE;AACFD,MAAAA,EADE;AAEF,SAAGC;AAFD;AAFD;AAF6B,CAAf,CAApB;AAWP,OAAO,MAAMkB,cAAc,GAAIC,IAAD,IAAU;AAEpC,SAAO,OAAOlC,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAM;AAAEkC,MAAAA,MAAM,EAAEtB;AAAV,QAAyBZ,QAAQ,GAAGqB,KAA1C;AAEA5B,IAAAA,IAAI,CAACoC,IAAL,CAAU;AACNzB,MAAAA,KAAK,EAAE,cADD;AAEN+B,MAAAA,IAAI,EAAE,gBAFA;AAGNC,MAAAA,iBAAiB,EAAE,KAHb;AAINC,MAAAA,iBAAiB,EAAE,KAJb;AAKNC,MAAAA,QAAQ,EAAE,MAAM;AACZ7C,QAAAA,IAAI,CAAC8C,WAAL;AACH;AAPK,KAAV;AAUA,UAAMC,OAAO,GAAG,MAAM7C,UAAU,CAACsC,IAAD,CAAhC;AACArB,IAAAA,UAAU,CAACa,GAAX,GAAiBe,OAAjB;AAEAzC,IAAAA,QAAQ,CAAEyB,aAAa,CAACZ,UAAD,CAAf,CAAR;AAEAnB,IAAAA,IAAI,CAACgD,KAAL;AAEH,GArBD;AAuBH,CAzBM;AA2BP,OAAO,MAAMC,aAAa,GAAI7B,EAAD,IAAQ;AACjC,SAAO,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAMC,GAAG,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,GAA5B;AACA,UAAMP,EAAE,CAACe,GAAH,CAAQ,GAAER,GAAI,kBAAiBY,EAAG,EAAlC,EAAqC8B,MAArC,EAAN;AAEA5C,IAAAA,QAAQ,CAAE6C,UAAU,CAAC/B,EAAD,CAAZ,CAAR;AAEH,GAPD;AAQH,CATM;AAWP,OAAO,MAAM+B,UAAU,GAAI/B,EAAD,KAAS;AAE/BE,EAAAA,IAAI,EAAElB,KAAK,CAACgD,WAFmB;AAG/B5B,EAAAA,OAAO,EAAEJ;AAHsB,CAAT,CAAnB;AAOP,OAAO,MAAMiC,UAAU,GAAG,OAAO;AAC7B/B,EAAAA,IAAI,EAAElB,KAAK,CAACkD;AADiB,CAAP,CAAnB","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nimport { db } from '../firebase/firebaseConfig';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport types from '../types/types';\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch( activeNote(doc.id, newNote) );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n            .catch(() => Swal.fire('Oops!', 'Something went wrong, try saving your note again!', 'error') );\r\n\r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n        Swal.fire('Saved', `Note with title \"${note.title}\" saved successfully!`, 'success');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote(activeNote) );\r\n\r\n        Swal.close();\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});"]},"metadata":{},"sourceType":"module"}