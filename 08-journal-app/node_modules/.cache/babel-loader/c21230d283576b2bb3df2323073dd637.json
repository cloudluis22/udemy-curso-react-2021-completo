{"ast":null,"code":"import _slicedToArray from\"C:/Users/Jos\\xE9 Luis/Desktop/React/08-journal-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import validator from'validator';import{useForm}from'../../hooks/useForm';import{removeErrorAction,setErrorAction}from'../../actions/ui';import{startLoginEmailPassword,startGoogleLogin}from'../../actions/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var LoginScreen=function LoginScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.ui;}),loading=_useSelector.loading,msgError=_useSelector.msgError;var _useForm=useForm({email:'',password:''}),_useForm2=_slicedToArray(_useForm,2),formValues=_useForm2[0],handleInputChange=_useForm2[1];var email=formValues.email,password=formValues.password;var handleLogin=function handleLogin(evt){evt.preventDefault();if(isFormValid()){dispatch(startLoginEmailPassword(email,password));}};var handleGoogleLogin=function handleGoogleLogin(){dispatch(startGoogleLogin());};var isFormValid=function isFormValid(){if(!validator.isEmail(email)){dispatch(setErrorAction('E-mail is not valid.'));return false;}else if(password.length<1){dispatch(setErrorAction('Please fill the password field.'));return false;}dispatch(removeErrorAction());return true;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"auth__title\",children:\"Login\"}),msgError&&/*#__PURE__*/_jsx(\"div\",{className:\"auth__alert-error\",children:msgError}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"animate__animated animate__fadeIn animate__faster\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"E-mail\",name:\"email\",className:\"auth__input\",autoComplete:\"off\",value:email,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",className:\"auth__input\",value:password,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-block\",disabled:loading,children:\"Login\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth__social-networks\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" Login with social networks \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"google-btn\",onClick:handleGoogleLogin,children:[/*#__PURE__*/_jsx(\"div\",{className:\"google-icon-wrapper\",children:/*#__PURE__*/_jsx(\"img\",{className:\"google-icon\",src:\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",alt:\"google button\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"btn-text\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Sign in with Google\"})})]})]}),/*#__PURE__*/_jsx(Link,{to:\"/auth/register\",className:\"link\",children:\" Create new account \"})]})]});};export default LoginScreen;","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/08-journal-app/src/components/auth/LoginScreen.js"],"names":["React","useDispatch","useSelector","Link","validator","useForm","removeErrorAction","setErrorAction","startLoginEmailPassword","startGoogleLogin","LoginScreen","dispatch","state","ui","loading","msgError","email","password","formValues","handleInputChange","handleLogin","evt","preventDefault","isFormValid","handleGoogleLogin","isEmail","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator'\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n\r\n            dispatch( startLoginEmailPassword(email, password) );\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail(email) ) {\r\n            dispatch( setErrorAction('E-mail is not valid.') );\r\n            return false;\r\n        }\r\n        else if (password.length < 1) {\r\n            dispatch( setErrorAction('Please fill the password field.') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() );\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n\r\n            {   msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input type=\"text\" placeholder=\"E-mail\" name=\"email\" className=\"auth__input\" autoComplete=\"off\" value={email} onChange={ handleInputChange }/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\" value={ password } onChange={ handleInputChange }/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading } >Login</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p> Login with social networks </p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\"> Create new account </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}