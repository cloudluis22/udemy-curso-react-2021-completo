{"ast":null,"code":"export const fileUpload = async file => {\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/dne8hzs6i/upload';\n  const formData = new FormData();\n  formData.append('upload_preset', 'curso-react-journal');\n  formData.append('file', file);\n\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: 'POST',\n      body: formData\n    });\n\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/08-journal-app/src/helpers/fileUpload.js"],"names":["fileUpload","file","cloudUrl","formData","FormData","append","resp","fetch","method","body","ok","cloudResp","json","secure_url","error"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAEtC,QAAMC,QAAQ,GAAG,kDAAjB;AAEA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,qBAAjC;AACAF,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;;AAEA,MAAI;AAEA,UAAMK,IAAI,GAAG,MAAMC,KAAK,CAACL,QAAD,EAAW;AAC/BM,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEN;AAFyB,KAAX,CAAxB;;AAKA,QAAIG,IAAI,CAACI,EAAT,EAAa;AACT,YAAMC,SAAS,GAAG,MAAML,IAAI,CAACM,IAAL,EAAxB;AACA,aAAOD,SAAS,CAACE,UAAjB;AACH,KAHD,MAIK;AACD,YAAM,MAAMP,IAAI,CAACM,IAAL,EAAZ;AACH;AAEJ,GAfD,CAeE,OAAOE,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AAEJ,CA3BM","sourcesContent":["\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dne8hzs6i/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'curso-react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n        else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}