{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Jos\\xE9 Luis/Desktop/React/08-journal-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Jos\\xE9 Luis/Desktop/React/08-journal-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import types from'../types/types';import{firebase,googleAuthProvider}from'../firebase/firebaseConfig';import Swal from'sweetalert2';import{finishLoading,removeErrorAction,setErrorAction,startLoading}from'../actions/ui';import{noteLogout}from'./notes';export var startLoginEmailPassword=function startLoginEmailPassword(email,password){return function(dispatch){dispatch(startLoading());firebase.auth().signInWithEmailAndPassword(email,password).then(function(_ref){var user=_ref.user;console.log(user);dispatch(login(user.uid,user.displayName));dispatch(removeErrorAction());dispatch(finishLoading());}).catch(function(){dispatch(finishLoading());Swal.fire('Oops!','There were no accounts found with the provided credentials.','error');});};};export var startRegisterWithEmailPasswordName=function startRegisterWithEmailPasswordName(email,password,name){return function(dispatch){firebase.auth().createUserWithEmailAndPassword(email,password).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=_ref2.user;_context.next=3;return user.updateProfile({displayName:name});case 3:console.log(user);dispatch(login(user.uid,user.displayName));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}()).catch(function(e){Swal.fire('Oops!',e.message,'error');});};};export var startGoogleLogin=function startGoogleLogin(){return function(dispatch){firebase.auth().signInWithPopup(googleAuthProvider).then(function(_ref4){var user=_ref4.user;dispatch(login(user.uid,user.displayName));});};};export var login=function login(uid,displayName){return{type:types.login,payload:{uid:uid,displayName:displayName}};};export var startLogout=function startLogout(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return firebase.auth().signOut();case 2:dispatch(logout());dispatch(noteLogout());case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref5.apply(this,arguments);};}();};export var logout=function logout(){return{type:types.logout};};","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/08-journal-app/src/actions/auth.js"],"names":["types","firebase","googleAuthProvider","Swal","finishLoading","removeErrorAction","setErrorAction","startLoading","noteLogout","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","console","log","login","uid","displayName","catch","fire","startRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","e","message","startGoogleLogin","signInWithPopup","type","payload","startLogout","signOut","logout"],"mappings":"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","sourcesContent":["import types from '../types/types';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { finishLoading, removeErrorAction ,setErrorAction, startLoading } from '../actions/ui'\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                console.log(user);\r\n                dispatch( login(user.uid, user.displayName) );\r\n                dispatch( removeErrorAction() );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( () => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Oops!', 'There were no accounts found with the provided credentials.', 'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name })\r\n                console.log(user);\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Oops!', e.message, 'error');\r\n            });\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    };\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});"]},"metadata":{},"sourceType":"module"}