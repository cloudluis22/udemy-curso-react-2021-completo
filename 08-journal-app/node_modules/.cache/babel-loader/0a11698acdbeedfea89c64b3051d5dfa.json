{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jos\\xE9 Luis\\\\Desktop\\\\React\\\\08-journal-app\\\\src\\\\components\\\\auth\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    loading,\n    msgError\n  } = useSelector(state => state.ui);\n  const [formValues, handleInputChange] = useForm({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formValues;\n\n  const handleLogin = evt => {\n    evt.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startLoginEmailPassword(email, password));\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  const isFormValid = () => {\n    if (!validator.isEmail(email)) {\n      dispatch(setErrorAction('E-mail is not valid.'));\n      return false;\n    } else if (password.length < 1) {\n      dispatch(setErrorAction('Please fill the password field.'));\n      return false;\n    }\n\n    dispatch(removeErrorAction());\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"auth__title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), msgError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth__alert-error\",\n      children: msgError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"animate__animated animate__fadeIn animate__faster\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        name: \"email\",\n        className: \"auth__input\",\n        autoComplete: \"off\",\n        value: email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        className: \"auth__input\",\n        value: password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        disabled: loading,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__social-networks\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Login with social networks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-btn\",\n          onClick: handleGoogleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"google-icon\",\n              src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n              alt: \"google button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"btn-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sign in with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/auth/register\",\n        className: \"link\",\n        children: \" Create new account \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginScreen, \"ABH0MvzApfqM9WpkfXgdIpA5P/Q=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/08-journal-app/src/components/auth/LoginScreen.js"],"names":["React","useDispatch","useSelector","Link","validator","useForm","removeErrorAction","setErrorAction","startLoginEmailPassword","startGoogleLogin","LoginScreen","dispatch","loading","msgError","state","ui","formValues","handleInputChange","email","password","handleLogin","evt","preventDefault","isFormValid","handleGoogleLogin","isEmail","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator'\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n\r\n            dispatch( startLoginEmailPassword(email, password) );\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail(email) ) {\r\n            dispatch( setErrorAction('E-mail is not valid.') );\r\n            return false;\r\n        }\r\n        else if (password.length < 1) {\r\n            dispatch( setErrorAction('Please fill the password field.') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() );\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n\r\n            {   msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input type=\"text\" placeholder=\"E-mail\" name=\"email\" className=\"auth__input\" autoComplete=\"off\" value={email} onChange={ handleInputChange }/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\" value={ password } onChange={ handleInputChange }/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading } >Login</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p> Login with social networks </p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\"> Create new account </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}