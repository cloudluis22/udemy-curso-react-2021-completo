{"version":3,"sources":["firebase/firebaseConfig.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/routers/PublicRoute.js","components/routers/PrivateRoute.js","components/routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","setErrorAction","error","type","payload","removeErrorAction","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapNode","push","id","data","console","log","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","catch","Swal","fire","refreshNote","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","displayName","LoginScreen","useDispatch","useSelector","state","ui","loading","msgError","formValues","isFormValid","validator","isEmail","length","className","onSubmit","evt","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","e","message","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","active","date","moment","format","style","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","actNote","activeId","useRef","useEffect","current","delete","NothingSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","isLoggedIn","Component","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.53f78a76.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBVOwU0RhCp2tc9cah0-o7gMTszjtaZIoI\",\r\n    authDomain: \"curso-react-udemy-786ae.firebaseapp.com\",\r\n    projectId: \"curso-react-udemy-786ae\",\r\n    storageBucket: \"curso-react-udemy-786ae.appspot.com\",\r\n    messagingSenderId: \"810572685553\",\r\n    appId: \"1:810572685553:web:26059ee9297712ebf48950\",\r\n    measurementId: \"G-YKCSDCJQDF\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nconst types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdated: '[Notes] Updated Note',\r\n    notesFileUrl: '[Notes] Updated Image URL',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n\r\n}\r\n\r\nexport default types;","import types from \"../types/types\"\r\n\r\n\r\nexport const setErrorAction = (error) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n});\r\n\r\nexport const removeErrorAction = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dne8hzs6i/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'curso-react-journal');\r\n    formData.append('file', file);\r\n\r\n\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n        else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = []\r\n\r\n    notesSnap.forEach(snapNode => {\r\n        notes.push({\r\n            id: snapNode.id,\r\n            ...snapNode.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes)\r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { db } from '../firebase/firebaseConfig';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport types from '../types/types';\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch( activeNote(doc.id, newNote) );\r\n        dispatch( addNewNote(doc.id, newNote) );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n            .catch(() => Swal.fire('Oops!', 'Something went wrong, try saving your note again!', 'error') );\r\n\r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n        Swal.fire('Saved', `Note with title \"${note.title}\" saved successfully!`, 'success');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote(activeNote) );\r\n\r\n        Swal.close();\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import types from '../types/types';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { finishLoading, removeErrorAction ,setErrorAction, startLoading } from '../actions/ui'\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                console.log(user);\r\n                dispatch( login(user.uid, user.displayName) );\r\n                dispatch( removeErrorAction() );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( () => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Oops!', 'There were no accounts found with the provided credentials.', 'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name })\r\n                console.log(user);\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Oops!', e.message, 'error');\r\n            });\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    };\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator'\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n\r\n            dispatch( startLoginEmailPassword(email, password) );\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail(email) ) {\r\n            dispatch( setErrorAction('E-mail is not valid.') );\r\n            return false;\r\n        }\r\n        else if (password.length < 1) {\r\n            dispatch( setErrorAction('Please fill the password field.') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() );\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n\r\n            {   msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input type=\"text\" placeholder=\"E-mail\" name=\"email\" className=\"auth__input\" autoComplete=\"off\" value={email} onChange={ handleInputChange }/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\" value={ password } onChange={ handleInputChange }/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading } >Login</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p> Login with social networks </p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\"> Create new account </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator'\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password));\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch( setErrorAction('name is required') );\r\n            return false;\r\n\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch( setErrorAction('email is not valid') );\r\n            return false;\r\n\r\n        } else if (password !== password2 || password.length < 6) {\r\n            dispatch( setErrorAction('Password should be at least 6 characters and match with each other.') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() );\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {   msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"auth__input\" autoComplete=\"off\" value={name} onChange={ handleInputChange } />\r\n            <input type=\"text\" placeholder=\"E-mail\" name=\"email\" className=\"auth__input\" autoComplete=\"off\" value={email} onChange={ handleInputChange } />\r\n            <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\" value={password} onChange={ handleInputChange } />\r\n            <input type=\"password\" placeholder=\"Confirm password\" name=\"password2\" className=\"auth__input\" value={password2} onChange={ handleInputChange }/>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\"> Register </button>\r\n\r\n            <Link to=\"/auth/login\" className=\"link\"> Already registered? </Link>\r\n\r\n        </form>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport LoginScreen from '../auth/LoginScreen';\r\nimport RegisterScreen from '../auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { activeNote, startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n    const date = moment(active.date);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (evt) => {\r\n\r\n        const file = evt.target.files[0];\r\n\r\n        if (file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> { date.format('ll') } </span>\r\n\r\n            <input id=\"fileSelector\" type=\"file\" style={ { display: 'none' } } onChange={ handleFileChange } />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={ handlePictureUpload } > Picture </button>\r\n                <button className=\"btn\" onClick={ handleSave }> Save </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: actNote } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ] = useForm(actNote);\r\n\r\n    const { body, title } = formValues;\r\n\r\n    const activeId = useRef( actNote.id );\r\n\r\n    useEffect( () => {\r\n\r\n        if (actNote.id !== activeId.current) {\r\n            reset(actNote);\r\n            activeId.current = actNote.id;\r\n        }\r\n\r\n    }, [actNote, reset]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, { ...formValues } ) ) ;\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch( startDeleting( activeId.current ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Put a title here\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={ handleInputChange }\r\n                >\r\n                    </textarea>\r\n\r\n                {\r\n                    (actNote.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={ actNote.url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n                <button className=\"btn btn-danger\" onClick={ handleDelete } > Delete </button>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create a new entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n    const note = {\r\n        date,\r\n        title,\r\n        body,\r\n        url\r\n    }\r\n\r\n    const handleEntryClick = () => {\r\n\r\n        dispatch( activeNote(id, note) );\r\n\r\n    }\r\n\r\n    return (\r\n        <div onClick={ handleEntryClick }>\r\n\r\n            <div className=\"journal__entry pointer\">\r\n\r\n                {\r\n                    url &&\r\n                    <div\r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                        }}\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"journal__entry-body\">\r\n\r\n                    <p className=\"journal__entry-title\"> { title } </p>\r\n                    <p className=\"journal__entry-content\"> { body } </p>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"journal__entry-date-box\">\r\n                    <span> { noteDate.format('dddd') } </span>\r\n                    <h4> { noteDate.format('Do') } </h4>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={ note.id } // Id. de Firebase\r\n                        { ...note } // El resto de propiedades.\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { JournalEntries } from './JournalEntries';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() ) ;\r\n    }\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleAddNewEntry = () => {\r\n\r\n        dispatch(startNewNote());\r\n\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={handleLogout}>Logout</button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={ handleAddNewEntry } >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\"> New Entry </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\n\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nconst JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n\r\n            <Sidebar/>\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalScreen;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { firebase } from '../../firebase/firebaseConfig';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport AuthRouter from './AuthRouter';\r\nimport JournalScreen from '../journal/JournalScreen';\r\nimport { login } from '../../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../../actions/notes'\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    console.log(isLoggedIn);\r\n\r\n    useEffect( () => {\r\n\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch( startLoadingNotes(user.uid) );\r\n            }\r\n            else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            // Una vez se autentica ya no se está revisando si el usuario está siendo autenticado.\r\n            setChecking(false)\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <div className=\"spinner round\"></div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute isLoggedIn={ isLoggedIn } component={ AuthRouter } path=\"/auth\" />\r\n                    <PrivateRoute exact isLoggedIn={ isLoggedIn } path=\"/\" component={ JournalScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import types from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import types from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers( applyMiddleware(thunk) ));","import types from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport AppRouter from './components/routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}