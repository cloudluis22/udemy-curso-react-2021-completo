{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/convertEvents.js","actions/events.js","components/ui/Navbar.js","helpers/calendar-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","evt","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchNoToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","convertEvents","newEvents","event","startDate","moment","start","toDate","endDate","end","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventsLoaded","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","clone","initEvent","notes","CalendarModal","formValues","setFormValues","useEffect","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","dbEvent","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isLoggedIn","Component","component","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82bb4193.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventLogoutCleaning: '[EVENT] Logout Cleaning',\r\n    eventStartAddNewL: '[EVENT] Start Add New',\r\n    eventAddNew: '[EVENT] Add New',\r\n    eventSetActive: '[EVENT] Set Active',\r\n    eventClearActive: '[EVENT] Clear Active',\r\n    eventUpdated: '[EVENT] Event Updated',\r\n    eventDeleted: '[EVENT] Event Deleted',\r\n    eventsLoaded: '[EVENT] Events Loaded',\r\n\r\n    authCheckingFinish: '[AUTH] Finish Checking Loading State',\r\n    authStartLogin: '[AUTH] Start Login',\r\n    authLogin: '[AUTH] Login',\r\n    authStartRegister: '[AUTH] Start Register',\r\n    authStartTokeRenew: '[AUTH] Start Token Renewal',\r\n    authLogout: '[AUTH] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            };\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from '../types/types';\r\n\r\n/* id: new Date().getTime(),\r\n        title: 'RTX 3060 Ti',\r\n        startDate: moment().toDate(),\r\n        endDate: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar una RTX 3060 Ti',\r\n        user: {\r\n            id: '12345',\r\n            name: 'Peter Parker'\r\n        }\r\n    }*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    evt => (evt.id === action.payload.id ) ? action.payload : evt\r\n                )\r\n            }\r\n\r\n            case types.eventDeleted:\r\n                return {\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        evt => (evt.id !== state.activeEvent.id)\r\n                    ),\r\n                    activeEvent: null\r\n                }\r\n\r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n\r\n        case types.eventLogoutCleaning:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchNoToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; // Ejemplo localhost:3100/api/auth\r\n\r\n    if (method === 'GET') {\r\n\r\n        // Retorna el producto de la petición si es GET.\r\n        return fetch(url);\r\n\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n\r\n};\r\n\r\nconst fetchToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; // Ejemplo localhost:3100/api/auth\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n\r\n        // Retorna el producto de la petición si es GET.\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n\r\n};\r\n\r\nexport {\r\n    fetchNoToken,\r\n    fetchToken\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchNoToken, fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchNoToken('auth', { email, password }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchNoToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        };\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async (dispatch) => {\r\n        const response = await fetchToken('auth/renew');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        };\r\n    };\r\n\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n\r\n    };\r\n\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n\r\n        lEmail: 'cloudluis22@hotmail.com',\r\n        lPassword: 'ultraluis23'\r\n\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Isaac',\r\n        rEmail: 'isaaco320@hotmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (evt) => {\r\n        evt.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    };\r\n\r\n    const handleRegister = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (rPassword !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas tienen que coincidir.', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword, rName));\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit fs-4\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit fs-4\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\nexport const convertEvents = (events) => {\r\n\r\n\r\n    const newEvents = events.map((event) => ({\r\n        ...event,\r\n        startDate: moment(event.start).toDate(),\r\n        endDate: moment(event.end).toDate(),\r\n    }));\r\n\r\n    delete newEvents.start;\r\n    delete newEvents.end;\r\n\r\n    return newEvents;\r\n\r\n}","import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from \"react-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { convertEvents } from \"../helpers/convertEvents\";\r\nimport { fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const dbEvent = {\r\n                ...event,\r\n                start: event.startDate,\r\n                end: event.endDate\r\n            }\r\n\r\n            const response = await fetchToken('events', dbEvent, 'POST');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await fetchToken('events');\r\n            const body = await response.json();\r\n\r\n            const events = convertEvents(body.events);\r\n           dispatch( eventsLoaded( events ) );\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const response = await fetchToken(`events/${event.id}`, event, 'DELETE');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n\r\n    };\r\n};\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n\r\n            const { id } = getState().calendar.activeEvent;\r\n\r\n            const response = await fetchToken(`events/${id}`, {}, 'delete');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n\r\n    };\r\n}\r\n\r\nexport const eventLogoutCleaning = () => ({ type: types.eventLogoutCleaning });\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nconst eventsLoaded = (events) => ({ type: types.eventsLoaded, payload: events });","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogoutCleaning } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        dispatch( eventLogoutCleaning() );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n\r\n            <span className=\"navbar-brand px-4\"> { name } </span>\r\n\r\n            <button className=\"btn btn-outline-danger mx-4 px-3\" onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span> { title } </span>\r\n            <strong> - { user.name } </strong>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActive, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst end = moment(now).clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    startDate: now.toDate(),\r\n    endDate: end.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector((state) => state.ui);\r\n    const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, startDate, endDate } = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        }\r\n        else {\r\n            setFormValues(initEvent);\r\n        };\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState(end.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActive() );\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (evt) => {\r\n        setDateStart(evt);\r\n        setFormValues({\r\n            ...formValues,\r\n            startDate: evt\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (evt) => {\r\n        setDateEnd(evt);\r\n        setFormValues({\r\n            ...formValues,\r\n            endDate: evt\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        const momentStart = moment(startDate);\r\n        const momentEnd = moment(endDate);\r\n\r\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\r\n            return Swal.fire('Oops!', '¡La fecha final debe ser mayor a la de inicio!', 'error');\r\n        };\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        else {\r\n\r\n            dispatch(eventStartAddNew(formValues));\r\n\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar Evento' : 'Crear Evento' } </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmitForm }>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${ !titleValid  && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n       dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleOpenModal}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-es'\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\nimport { CalendarModal } from './CalendarModal';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (evt) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (evt) => {\r\n        dispatch( eventSetActive(evt) );\r\n    }\r\n\r\n    const onViewChange = (evt) => {\r\n        setLastView(evt);\r\n        localStorage.setItem('lastView', evt)\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch( eventClearActive() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"startDate\"\r\n                endAccessor=\"endDate\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                components={ { event: CalendarEvent } }\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) &&\r\n                <DeleteEventFab/>\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5> Espere... </h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute exact path=\"/login\" isLoggedIn={ !!uid } component={ LoginScreen } />\r\n                    <PrivateRoute exact path=\"/\" isLoggedIn={ !!uid  } component={ CalendarScreen } />\r\n\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}