{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jos\\xE9 Luis\\\\Desktop\\\\React\\\\hooks-app\\\\src\\\\components\\\\06-memos\\\\MemoHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCounter } from '../../hooks/useCounter';\nimport '../02-useEffect/effect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MemoHook = () => {\n  _s();\n\n  const {\n    counter,\n    increment\n  } = useCounter(10000);\n  const [show, setShow] = useState(true);\n\n  const procesoPesado = iteraciones => {\n    for (let index = 0; index < iteraciones; index++) {\n      console.log('hola');\n    }\n\n    return `${iteraciones} iteraciones realizadas.`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Memorize Hook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", procesoPesado(counter), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Counter: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: increment,\n      children: \" +1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary ml-3\",\n      onClick: () => {\n        setShow(!show);\n      },\n      children: [\"Show/Hide \", JSON.stringify(show)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoHook, \"KxROjmD0jVKjh25h37RxEnAvX20=\", false, function () {\n  return [useCounter];\n});\n\n_c = MemoHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoHook\");","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/hooks-app/src/components/06-memos/MemoHook.js"],"names":["React","useState","useCounter","MemoHook","counter","increment","show","setShow","procesoPesado","iteraciones","index","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,4BAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBH,UAAU,CAAC,KAAD,CAAzC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMO,aAAa,GAAIC,WAAD,IAAiB;AACnC,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,WAA5B,EAAyCC,KAAK,EAA9C,EAAkD;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AAED,WAAQ,GAAEH,WAAY,0BAAtB;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,sBAAKD,aAAa,CAACJ,OAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAA,2CAAa;AAAA,kBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,OAAO,EAAE,MAAM;AACXE,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,OAJL;AAAA,+BAMeO,IAAI,CAACC,SAAL,CAAeR,IAAf,CANf;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlCM;;GAAMH,Q;UAEsBD,U;;;KAFtBC,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport { useCounter } from '../../hooks/useCounter';\r\nimport '../02-useEffect/effect.css';\r\n\r\nexport const MemoHook = () => {\r\n\r\n    const { counter, increment } = useCounter(10000);\r\n    const [show, setShow] = useState(true);\r\n\r\n    const procesoPesado = (iteraciones) => {\r\n        for (let index = 0; index < iteraciones; index++) {\r\n            console.log('hola');\r\n        }\r\n\r\n        return `${iteraciones} iteraciones realizadas.`;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> Memorize Hook </h1>\r\n            <hr />\r\n\r\n            <p> {procesoPesado(counter)} </p>\r\n\r\n            <h2>Counter: <small>{ counter }</small> </h2>\r\n            <button className=\"btn btn-primary\" onClick={increment}> +1 </button>\r\n\r\n            <button\r\n                className=\"btn btn-outline-primary ml-3\"\r\n                onClick={() => {\r\n                    setShow(!show)\r\n                }}\r\n            >\r\n                Show/Hide {JSON.stringify(show)}\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}