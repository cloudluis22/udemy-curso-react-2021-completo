{"ast":null,"code":"// API Key para tener acceso a GIPHY.\nconst apiKey = 'Loquz333yygJkhc6ZdVpNj9zLOM7fjZz'; // Creando la petición a través del método de fetch. Esta petición retorna una promesa.\n\nconst peticion = fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`);\npeticion // Si la petición fue aceptada, trae la información.\n.then(resp => resp.json()) // Obtiene la información del JSON otorgado por la petición. Esto es una promesa encadenada.\n.then(({\n  data\n}) => {\n  // Obtiene el URL de el GIF que viene incluído en el JSON.\n  const {\n    url\n  } = data.images.original; // Creando un elemento de imagen para colocarlo en el HTML de el proyecto.\n\n  const img = document.createElement('img');\n  img.src = url;\n  document.body.append(img);\n}).catch(console.warn);","map":{"version":3,"sources":["C:/Users/José Luis/Desktop/React/02-bases-javascript/src/index.js"],"names":["apiKey","peticion","fetch","then","resp","json","data","url","images","original","img","document","createElement","src","body","append","catch","console","warn"],"mappings":"AACA;AACA,MAAMA,MAAM,GAAG,kCAAf,C,CAEA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,CAAE,gDAA+CF,MAAO,EAAxD,CAAtB;AAEAC,QAAQ,CACJ;AADI,CAEHE,IAFL,CAEUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAFlB,EAGI;AAHJ,CAIKF,IAJL,CAIU,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAc;AAChB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUD,IAAI,CAACE,MAAL,CAAYC,QAA5B,CAFgB,CAIhB;;AACA,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,GAAJ,GAAUN,GAAV;AAEAI,EAAAA,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBL,GAArB;AACH,CAbL,EAcKM,KAdL,CAcWC,OAAO,CAACC,IAdnB","sourcesContent":["\r\n// API Key para tener acceso a GIPHY.\r\nconst apiKey = 'Loquz333yygJkhc6ZdVpNj9zLOM7fjZz';\r\n\r\n// Creando la petición a través del método de fetch. Esta petición retorna una promesa.\r\nconst peticion = fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`);\r\n\r\npeticion\r\n    // Si la petición fue aceptada, trae la información.\r\n    .then(resp => resp.json())\r\n    // Obtiene la información del JSON otorgado por la petición. Esto es una promesa encadenada.\r\n    .then(({ data }) => {\r\n        // Obtiene el URL de el GIF que viene incluído en el JSON.\r\n        const { url } = data.images.original;\r\n\r\n        // Creando un elemento de imagen para colocarlo en el HTML de el proyecto.\r\n        const img = document.createElement('img');\r\n        img.src = url;\r\n\r\n        document.body.append(img);\r\n    })\r\n    .catch(console.warn);"]},"metadata":{},"sourceType":"module"}