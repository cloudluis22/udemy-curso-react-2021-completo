{"ast":null,"code":"import { getHeroById, getHeroByOwner } from '../src/bases/08-imp-exp'; // Función que lleva consigo una promesa.\n\nconst getHeroByIdAsync = id => {\n  // La función retonar la promesa.\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const heroe = getHeroById(id); // Si se encontro al heroe con el id indicado la promesa se cumple.\n\n      if (heroe) {\n        resolve(heroe); // Al resolve se le pasa como parámetro el heroe encontrado.\n      } else {\n        // Si no se encuentra, la promesa es rechazada.\n        reject('No se pudo encontrar al heroe'); // Al no encontrar al heroe solo se retorna un mensaje de error.\n      }\n    }, 2000);\n  });\n};\n\ngetHeroByIdAsync(3).then(console.log).catch(console.warn);","map":{"version":3,"sources":["C:/Users/José Luis/Desktop/React/02-bases-javascript/src/index.js"],"names":["getHeroById","getHeroByOwner","getHeroByIdAsync","id","Promise","resolve","reject","setTimeout","heroe","then","console","log","catch","warn"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,yBAA5C,C,CAEA;;AACA,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ;AAE7B;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpCC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAMC,KAAK,GAAGR,WAAW,CAACG,EAAD,CAAzB,CADa,CAGb;;AACA,UAAIK,KAAJ,EAAW;AACPH,QAAAA,OAAO,CAACG,KAAD,CAAP,CADO,CACS;AACnB,OAFD,MAGK;AACD;AACAF,QAAAA,MAAM,CAAC,+BAAD,CAAN,CAFC,CAEwC;AAC5C;AAEJ,KAZS,EAYP,IAZO,CAAV;AAcH,GAhBM,CAAP;AAkBH,CArBD;;AAuBAJ,gBAAgB,CAAC,CAAD,CAAhB,CACKO,IADL,CACWC,OAAO,CAACC,GADnB,EAEKC,KAFL,CAEYF,OAAO,CAACG,IAFpB","sourcesContent":["import { getHeroById, getHeroByOwner } from '../src/bases/08-imp-exp'\r\n\r\n// Función que lleva consigo una promesa.\r\nconst getHeroByIdAsync = (id) => {\r\n\r\n    // La función retonar la promesa.\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        setTimeout(() => {\r\n            const heroe = getHeroById(id);\r\n\r\n            // Si se encontro al heroe con el id indicado la promesa se cumple.\r\n            if (heroe) {\r\n                resolve(heroe); // Al resolve se le pasa como parámetro el heroe encontrado.\r\n            }\r\n            else {\r\n                // Si no se encuentra, la promesa es rechazada.\r\n                reject('No se pudo encontrar al heroe'); // Al no encontrar al heroe solo se retorna un mensaje de error.\r\n            }\r\n\r\n        }, 2000);\r\n\r\n    });\r\n\r\n}\r\n\r\ngetHeroByIdAsync(3)\r\n    .then( console.log )\r\n    .catch( console.warn );\r\n    "]},"metadata":{},"sourceType":"module"}