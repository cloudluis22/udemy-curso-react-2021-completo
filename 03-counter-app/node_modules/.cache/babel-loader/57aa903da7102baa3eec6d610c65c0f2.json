{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jos\\xE9 Luis\\\\Desktop\\\\React\\\\03-counter-app\\\\src\\\\PrimeraApp.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Functional Components\n// El parametro es una propiedad.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PrimeraApp = ({\n  mensaje,\n  subtitulo\n}) => {\n  // Solo se puede retornar un elemento a la vez, pero usando un fragment puedes adjuntar varios elementos en uno solo.\n  return (\n    /*#__PURE__*/\n    // Esto es un fragment\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: subtitulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true)\n  );\n}; // Los PropTypes sirven para hacer requeridas las propiedades y solo de un cierto tipo al usar un componente.\n\n\n_c = PrimeraApp;\nPrimeraApp.propTypes = {\n  mensaje: PropTypes.string.isRequired // la propiedad \"mensaje\" requiere ser un string y es obligatorio usarlo.\n\n}; // Los default props sirven para dar valores por defecto a las propiedades si no se les asigna uno al ser utilizados.\n\nPrimeraApp.defaultProps = {\n  subtitulo: 'Soy un subtitulo'\n};\nexport default PrimeraApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrimeraApp\");","map":{"version":3,"sources":["C:/Users/JosÃ© Luis/Desktop/React/03-counter-app/src/PrimeraApp.js"],"names":["React","PropTypes","PrimeraApp","mensaje","subtitulo","propTypes","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;;;;;AACA,MAAMC,UAAU,GAAG,CAAE;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAF,KAA8B;AAE7C;AACA;AAAA;AACI;AACA;AAAA,8BACK;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAFJ;AASH,CAZD,C,CAcA;;;KAdMF,U;AAeNA,UAAU,CAACG,SAAX,GAAuB;AACnBF,EAAAA,OAAO,EAAEF,SAAS,CAACK,MAAV,CAAiBC,UADP,CACkB;;AADlB,CAAvB,C,CAIA;;AACAL,UAAU,CAACM,YAAX,GAA0B;AACtBJ,EAAAA,SAAS,EAAE;AADW,CAA1B;AAIA,eAAeF,UAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Functional Components\r\n// El parametro es una propiedad.\r\nconst PrimeraApp = ( { mensaje, subtitulo } ) => {\r\n\r\n    // Solo se puede retornar un elemento a la vez, pero usando un fragment puedes adjuntar varios elementos en uno solo.\r\n    return (\r\n        // Esto es un fragment\r\n        <> \r\n             <h1>{mensaje}</h1>\r\n             <p>{subtitulo}</p>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n// Los PropTypes sirven para hacer requeridas las propiedades y solo de un cierto tipo al usar un componente.\r\nPrimeraApp.propTypes = {\r\n    mensaje: PropTypes.string.isRequired // la propiedad \"mensaje\" requiere ser un string y es obligatorio usarlo.\r\n}\r\n\r\n// Los default props sirven para dar valores por defecto a las propiedades si no se les asigna uno al ser utilizados.\r\nPrimeraApp.defaultProps = {\r\n    subtitulo: 'Soy un subtitulo'\r\n}\r\n\r\nexport default PrimeraApp;"]},"metadata":{},"sourceType":"module"}